/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blocnotas;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class Bloc extends javax.swing.JFrame {

    /**
     * Creates new form Bloc
     */
    public Bloc() {
        initComponents();
        setTitle("Bloc de notas");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        archivoNuevo = new javax.swing.JMenuItem();
        abrirArchivo = new javax.swing.JMenuItem();
        guardarArchivo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        jScrollPane1.setViewportView(areaTexto);

        jMenu1.setText("Archivo");

        archivoNuevo.setText("Nuevo");
        archivoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archivoNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(archivoNuevo);

        abrirArchivo.setText("Abrir...");
        abrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArchivoActionPerformed(evt);
            }
        });
        jMenu1.add(abrirArchivo);

        guardarArchivo.setText("Guardar");
        guardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarArchivoActionPerformed(evt);
            }
        });
        jMenu1.add(guardarArchivo);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArchivoActionPerformed
        // TODO add your handling code here:
System.out.println(abierto);
        if (abierto == false) {
            JFileChooser seleccionado = new JFileChooser();
            seleccionado.showOpenDialog(seleccionado);
            ruta = seleccionado.getSelectedFile().getAbsolutePath();
            setTitle(seleccionado.getSelectedFile().getPath());
            System.out.println(seleccionado.getSelectedFile().getPath());
            leerArchivo(ruta);
            abierto = true;
        } else {
            gestionGuardar();
            areaTexto.setText("");
            JFileChooser seleccionado = new JFileChooser();
            seleccionado.showOpenDialog(seleccionado);
            ruta = seleccionado.getSelectedFile().getAbsolutePath();
            setTitle(seleccionado.getSelectedFile().getPath());
            System.out.println(seleccionado.getSelectedFile().getPath());
            leerArchivo(ruta);
             
        }


    }//GEN-LAST:event_abrirArchivoActionPerformed

    private void guardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarArchivoActionPerformed
        if (ruta == null) {
            archivoNuevo();
        } else {

            try {
                // TODO add your handling code here:
                FileWriter fw = new FileWriter(ruta);
                String texto = areaTexto.getText().replace("\n", "\r\n");
                PrintWriter pw = new PrintWriter(fw);
                pw.print(texto);
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(Bloc.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_guardarArchivoActionPerformed

    private void archivoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archivoNuevoActionPerformed
        // TODO add your handling code here:
        String t = areaTexto.getText().replace("\n", "\r\n");
        System.out.println("texto: " + t);
        if (!t.equals("")) {
            gestionGuardar();
        } else {
            gestionGuardar();
        }
    }//GEN-LAST:event_archivoNuevoActionPerformed

    public void gestionGuardar() {
        String t = areaTexto.getText().replace("\n", "\r\n");
        System.out.println(t + "  -  " + contenedor);
        if (ruta == null) {
            
            int g = JOptionPane.showConfirmDialog(null, "¿Desea guardar cambios?", "Guardar", JOptionPane.YES_NO_OPTION);
            if (g == 0) {
                archivoNuevo();
                areaTexto.setText("");
                setTitle("Bloc de Notas");
            } else {
                areaTexto.setText("Bloc de Notas");
            }
        }
        if (!t.equals(contenedor)) {
            
            int g = JOptionPane.showConfirmDialog(null, "¿Desea guardar cambios?", "Guardar", JOptionPane.YES_NO_OPTION);
            if (g == 0) {

                try {
                    // TODO add your handling code here:
                    fw = new FileWriter(ruta);
                    String texto = areaTexto.getText().replace("\n", "\r\n");
                    PrintWriter pw = new PrintWriter(fw);
                    pw.print(texto);
                    fw.close();
                    areaTexto.setText("");
                    setTitle("Bloc de notas");
             

                } catch (IOException ex) {
                    Logger.getLogger(Bloc.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {

           // try {
                // TODO add your handling code here:
                //fw = new FileWriter(ruta);
                //fw.close();
                areaTexto.setText("");
               // contenedor = "";
                setTitle("Bloc de notas");
                contenedor = "";

            //} catch (IOException ex) {
          //      Logger.getLogger(Bloc.class.getName()).log(Level.SEVERE, null, ex);
          //  }

        }
       
    }

    public void leerArchivo(String ruta) {
        contenedor = "";
        try {
            FileReader fr = new FileReader(ruta);
            BufferedReader bf = new BufferedReader(fr);

            while ((sCadena = bf.readLine()) != null) {
                areaTexto.append(sCadena);
                contenedor += sCadena;
            }

        } catch (Exception e) {

        }
    }

    public void archivoNuevo() {
        JFileChooser guardarNuevo = new JFileChooser();
        guardarNuevo.showSaveDialog(null);
        File fNuevo = new File(guardarNuevo.getSelectedFile() + ".txt");
        try {
            // TODO add your handling code here:
            FileWriter fw = new FileWriter(fNuevo);
            String texto = areaTexto.getText().replace("\n", "\r\n");
            PrintWriter pw = new PrintWriter(fw);
            pw.print(texto);
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(Bloc.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    

    String ruta, sCadena;
    FileWriter fw;
    String contenedor = "";
    boolean abierto = false;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bloc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bloc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bloc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bloc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bloc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirArchivo;
    private javax.swing.JMenuItem archivoNuevo;
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JMenuItem guardarArchivo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
