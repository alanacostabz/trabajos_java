/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WineStoreDB;

import static WineStoreDB.DeleteCostumerID.RET_CANCEL;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author bryan
 */
public class editarVinos extends javax.swing.JDialog {

    private final HashMap color;
    private final HashMap pais;
    private final HashMap region;
    private final HashMap tipoUva;
    private final HashMap viñedo;

    private final Database db;
    String s = "";
    String cnombre;
    String tipo;
    String nregion;
    String wname;
    String price;
    String des;
    String url;
    String npais;
    String nviñedo;
    Date fecharu;
    String year_number;
    String d;
    String n;
    String u;
    Date f;
    String p;
    Integer co;
    Integer pa;
    Integer re;
    Integer vi;
    Integer uv;
    String añ;

    public editarVinos(java.awt.Frame parent, Database db) {
        super(parent, true);
        initComponents();
        this.db = db;

        color = new HashMap<String, Integer>();
        pais = new HashMap<String, Integer>();
        region = new HashMap<String, Integer>();
        tipoUva = new HashMap<String, Integer>();
        viñedo = new HashMap<String, Integer>();

        // buildComboColors();
        //buildComboViñedo();
        // buildComboYear();
        // buldComboCountry();
        // buldComboRegion();
        //buldCombotipoUva();
        // Construir el combo con el ID y Nombre de proveedor
        // buildCombo(db);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idvino = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jnombre = new javax.swing.JTextField();
        jprecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jdescripcion = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboColor = new javax.swing.JComboBox<>();
        comboCountry = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        comboRegion = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboViñedo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jurl = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        comboTipoUva = new javax.swing.JComboBox<>();
        jfecha = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        comboYear = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar vino");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar vino", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ID:");

        idvino.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idvino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idvinoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idvinoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idvino, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idvino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel3.setText("Nombre:");

        jnombre.setAutoscrolls(false);

        jprecio.setAutoscrolls(false);
        jprecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jprecioKeyTyped(evt);
            }
        });

        jLabel4.setText("Precio:");

        jdescripcion.setColumns(20);
        jdescripcion.setRows(5);
        jdescripcion.setAutoscrolls(false);
        jdescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jdescripcionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jdescripcion);

        jLabel5.setText("Descripción:");

        jLabel6.setText("Color:");

        comboCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCountryItemStateChanged(evt);
            }
        });
        comboCountry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                comboCountryFocusLost(evt);
            }
        });
        comboCountry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comboCountryMouseReleased(evt);
            }
        });
        comboCountry.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboCountryPropertyChange(evt);
            }
        });

        jLabel7.setText("Región:");

        jLabel8.setText("País:");

        jLabel9.setText("Viñedo:");

        jLabel10.setText("URL:");

        jurl.setAutoscrolls(false);
        jurl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jurlKeyTyped(evt);
            }
        });

        jLabel11.setText("Fecha de registro:");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Editar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel12.setText("Uva:");

        jLabel13.setText("Año:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jnombre))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboRegion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboTipoUva, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(124, 124, 124)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jurl, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(115, 115, 115)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(1, 1, 1)
                                .addComponent(comboViñedo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jprecio)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(comboViñedo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboTipoUva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel6)
                        .addComponent(comboColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jurl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addComponent(jfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void buildComboColors(Integer idv) {
        final String sql = "SELECT color_code,color_name FROM winestore.ref_colors ORDER BY color_name";

        String colorn = "";
        try {
            ResultSet rs = db.query(sql);
            comboColor.removeAllItems();
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboColor.addItem(name);
                color.put(name, id);
                if (idv == id) {
                    colorn = name;
                }

            }
            //  String nombre =  "nombre_item";
/*
for (int i = 0; i < comboColor.getModel().getSize(); i++) {
	comboColor object = (comboColor)comboColor.getModel().getElementAt(i);
	if(object.toString().equals(nombre)){
		comboColor.setSelectedItem(object);
	}
}*/
            comboColor.setSelectedItem(colorn);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void buldComboCountry(Integer ids) {
        final String sql = "SELECT country_code,country_name FROM winestore.ref_countries order by country_name";
        String count = "";
        try {
            ResultSet rs = db.query(sql);
            comboCountry.removeAllItems();
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboCountry.addItem(name);
                pais.put(name, id);
                if (ids == id) {
                    count = name;
                }
            }
            comboCountry.setSelectedItem(count);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void buildComboYear(String udv) {
        final String sql = "SELECT year_number FROM winestore.year order by  year_number desc";
        String id = "";
        try {
            ResultSet rs = db.query(sql);
            comboYear.removeAllItems();

            comboYear.addItem("NON-VINTAGE");
            while (rs.next()) {
                id = rs.getString(1);
                // String name = rs.getString(2);
                if (!id.equals("NON-VINTAGE")) {
                    comboYear.addItem(id);
                }

            }
            System.out.println(udv);
            if (!udv.equals("NON-VINTAGE")) {
                comboYear.setSelectedItem(udv);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void buldComboRegion() {
        final String sql1 = "select  region_code, winestore.ref_regions.country_code from winestore.ref_regions inner join winestore.ref_countries on \n"
                + "winestore.ref_regions.country_code = winestore.ref_countries.country_code order by winestore.ref_countries.country_name";
        int ide = 0;
        int aux = 0;
        try {

            ResultSet rs = db.query(sql1);
            comboRegion.removeAllItems();
            int contador = 0;

            while (rs.next()) {
                ide = rs.getInt(2);
                contador++;
                if (contador == 1) {
                    aux = ide;
                }

            }

            //System.out.println(aux);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        final String sql = "SELECT region_code,region_name FROM winestore.ref_regions where country_code = " + aux + " order by region_name";

        try {

            ResultSet rs = db.query(sql);
            comboRegion.removeAllItems();
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboRegion.addItem(name);
                region.put(name, id);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void buldCombotipoUva(Integer idu) {
        final String sql = "SELECT grape_variety_code,grape_variety_name FROM winestore.ref_grape_varieties order by grape_variety_name";
        String uv = "";
        try {
            ResultSet rs = db.query(sql);
            comboTipoUva.removeAllItems();
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboTipoUva.addItem(name);
                tipoUva.put(name, id);
                if (idu == id) {
                    uv = name;
                }
            }
            comboTipoUva.setSelectedItem(uv);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void buildComboViñedo(Integer idc) {
        final String sql = "SELECT vineyard_Code,vineyard_name FROM winestore.ref_vineyards order by vineyard_name";
        String vin = "";
        try {
            ResultSet rs = db.query(sql);
            comboViñedo.removeAllItems();
            comboViñedo.addItem("Seleccionar");
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboViñedo.addItem(name);
                viñedo.put(name, id);
                if (idc != null) {
                    if (idc == id) {
                        vin = name;
                    }
                }

            }
            if (idc != null) {
                comboViñedo.setSelectedItem(vin);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void idvinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idvinoKeyReleased

        String idv = idvino.getText();
        System.out.println(idv);
        jLabel2.setText("");
        if (!idv.equals("")) {
            try {
                if (validacionDatosW(idv) != 0) {
                    jLabel2.setText("ID valido.");
                    String sql = String.format("select color_code,grape_variety_code,region_code,wine_name, price, wine_description, url_picture_bottle,\n"
                            + "country_code, vineyard_code, fecha_registro, year_number from winestore.wine_store \n"
                            + "  \n"
                            + "\n"
                            + " where wine_store_id = " + idv);

                    ResultSet rs = db.query(sql);
                    while (rs.next()) {
                        cnombre = rs.getString(1);
                        tipo = rs.getString(2);
                        nregion = rs.getString(3);
                        wname = rs.getString(4);
                        price = rs.getString(5);
                        des = rs.getString(6);
                        url = rs.getString(7);
                        npais = rs.getString(8);
                        nviñedo = rs.getString(9);
                        fecharu = rs.getDate(10);
                        year_number = rs.getString(11);

                        jnombre.setText(wname);
                        jprecio.setText(price);
                        jdescripcion.setText(des);
                        jurl.setText(url);
                        jfecha.setDate(fecharu);

                    }
                    buildComboColors(Integer.parseInt(cnombre));
                    System.out.println(nviñedo);
                    if (nviñedo == null) {

                        buildComboViñedo(null);
                    } else {
                        buildComboViñedo(Integer.parseInt(nviñedo));
                        //System.out.println("paso");
                    }
                    buldCombotipoUva(Integer.parseInt(tipo));
                    buldComboCountry(Integer.parseInt(npais));
                    buildComboYear(year_number);
                   
                    if (nregion != null) {
                        String sql5 = String.format("SELECT region_code,region_name FROM winestore.ref_regions where country_code = %s order by region_name", Integer.parseInt(npais));
                        System.out.println(sql5.toString());
                        String one = "";
                        try {
                            comboRegion.removeAllItems();
                            region.clear();
                            ResultSet rs2 = db.query(sql5);
                            comboRegion.addItem("Seleccionar");
                            while (rs2.next()) {
                                //comboRegion.addItem("NULL");
                                int id = rs2.getInt(1);
                                String name = rs2.getString(2);
                                comboRegion.addItem(name);
                                region.put(name, id);
                                if (Integer.parseInt(nregion) == id) {
                                    one = name;
                                }
                            }
                            comboRegion.setSelectedItem(one);
                        } catch (SQLException ex) {
                            System.out.println(ex.getMessage());
                        }
                    }else{
                        
                        
                        String sql5 = String.format("SELECT region_code,region_name FROM winestore.ref_regions where country_code = %s order by region_name", Integer.parseInt(npais));
                        System.out.println(sql5.toString());
                        String one = "";
                        try {
                            comboRegion.removeAllItems();
                            region.clear();
                            ResultSet rs2 = db.query(sql5);
                            comboRegion.addItem("Seleccionar");
                            while (rs2.next()) {
                                //comboRegion.addItem("NULL");
                                int id = rs2.getInt(1);
                                String name = rs2.getString(2);
                                comboRegion.addItem(name);
                                region.put(name, id);
                               
                            }
                            comboRegion.setSelectedItem("Seleccionar");
                        } catch (SQLException ex) {
                            System.out.println(ex.getMessage());
                        }
                    }

                } else {
                    jLabel2.setText("ID no valido.");
                    jnombre.setText("");
                    jprecio.setText("");
                    jdescripcion.setText("");
                    jurl.setText("");
                    jfecha.setDate(null);
                    comboColor.removeAllItems();
                    comboTipoUva.removeAllItems();
                    comboViñedo.removeAllItems();
                    comboRegion.removeAllItems();
                    comboCountry.removeAllItems();
                    comboYear.removeAllItems();

                }

            } catch (SQLException ex) {
                Logger.getLogger(editarVinos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_idvinoKeyReleased

    private void jprecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jprecioKeyTyped
        // TODO add your handling code here:
        int c = (int) evt.getKeyChar();
        if (c >= 46 && c <= 57) {
            if (c == 46) {
                String dato = jprecio.getText();
                int t = dato.length();
                for (int i = 0; i <= t; i++) {
                    if (dato.contains(".")) {
                        evt.setKeyChar((char) KeyEvent.VK_CLEAR);
                    }

                }
                if (c == 47) {
                    evt.consume();
                }

            }

        } else {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            evt.consume();
        }

    }//GEN-LAST:event_jprecioKeyTyped

    private void comboCountryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboCountryFocusLost
        // TODO add your handling code here:
        Integer Pais = (Integer) pais.get(comboCountry.getSelectedItem());
        final String sql = String.format("SELECT region_code,region_name FROM winestore.ref_regions where country_code = %s order by region_name", Pais.intValue());
        System.out.println(sql.toString());
        try {
            comboRegion.removeAllItems();
            region.clear();
            comboRegion.addItem("Seleccionar");
            ResultSet rs = db.query(sql);

            while (rs.next()) {
                //comboRegion.addItem("NULL");
                int id = rs.getInt(1);
                String name = rs.getString(2);
                comboRegion.addItem(name);
                region.put(name, id);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }


    }//GEN-LAST:event_comboCountryFocusLost

    private void comboCountryMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboCountryMouseReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_comboCountryMouseReleased

    private void comboCountryPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboCountryPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_comboCountryPropertyChange

    private void comboCountryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCountryItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_comboCountryItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            String aux = idvino.getText();

            if (aux.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese el ID de vino para editar.");
            } else if (validacionDatosW(aux) == 0) {
                JOptionPane.showMessageDialog(rootPane, "No se ecuentra en la base de datos el vino con ID = " + aux + ".");
            } else if (jnombre.getText().isEmpty() || jurl.getText().isEmpty() || jfecha == null || jprecio.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Los campos nombre, url, fecha y precio no pueden quedar en vacios,Completar.");

            } else if (color.get(comboColor.getSelectedItem()) == null || pais.get(comboCountry.getSelectedItem()) == null || tipoUva.get(comboTipoUva.getSelectedItem()) == null) {
                JOptionPane.showMessageDialog(rootPane, "Los campos pais, color, tipo de uva y año no pueden quedar vacios, ");
            } else {
                if (jfecha.getDate() == null) {
                    JOptionPane.showMessageDialog(this, "Seleccione fecha  valida.");
                } else {

                    String f = "";
                    String dia = "";
                    String mes = "";
                    String year = "";
                    String s = "";
                    co = (Integer) color.get(comboColor.getSelectedItem());
                    uv = (Integer) tipoUva.get(comboTipoUva.getSelectedItem());
                    re = (Integer) region.get(comboRegion.getSelectedItem());
                    pa = (Integer) pais.get(comboCountry.getSelectedItem());
                    vi = (Integer) viñedo.get(comboViñedo.getSelectedItem());
                    añ = comboYear.getSelectedItem().toString();
                    n = jnombre.getText();
                    u = jurl.getText();
                    d = jdescripcion.getText();
                    p = jprecio.getText();
                    dia = Integer.toString(jfecha.getCalendar().get(Calendar.DAY_OF_MONTH));
                    year = Integer.toString(jfecha.getCalendar().get(Calendar.YEAR));
                    mes = Integer.toString(jfecha.getCalendar().get(Calendar.MONTH) + 1);
                    f = year + "-" + mes + "-" + dia;
                    int input = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de editar el vino con ID =  " + aux + "?", "Editar vino", 0);
                    if (input == 0) {
                        String sql = "update winestore.wine_store set color_code = " + co + ", grape_variety_code=" + uv + ", region_code=" + re + ", wine_name='" + n + "', price = '" + p + "', "
                                + "wine_description= '" + d + "', url_picture_bottle= '" + u + "', country_code=" + pa + ", vineyard_code = " + vi + ", fecha_registro ='"
                                + f + "', year_number = '" + añ + "' where wine_store_id = " + aux;
                        System.out.println(sql);
                        db.update(sql);
                        JOptionPane.showMessageDialog(this, "Se han guardado correctamente los cambios.");
                        setVisible(false);
                    }

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(editarVinos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void idvinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idvinoKeyTyped
        // TODO add your handling code here:
        int limit = 7;
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && c != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se pueden ingresar números.");
        }
        if (idvino.getText().length() == limit) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_idvinoKeyTyped

    private void jdescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdescripcionKeyTyped
        // TODO add your handling code here:
        if (jdescripcion.getText().length() == 100) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jdescripcionKeyTyped

    private void jurlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jurlKeyTyped
        // TODO add your handling code here:
        if (jdescripcion.getText().length() == 100) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jurlKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        doClose(1);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    public int getReturnStatus() {
        return returnStatus;
    }
    private int returnStatus = RET_CANCEL;

    public int validacionDatosW(String vd) throws SQLException {
        String sql1 = "select wine_store_id from winestore.wine_store";
        int x = 0;
        try {
            ResultSet rs = db.query(sql1);
            while (rs.next()) {

                String name = rs.getString(1);

                if (name.equalsIgnoreCase(vd)) {
                    x++;
                }

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return x;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboColor;
    private javax.swing.JComboBox<String> comboCountry;
    private javax.swing.JComboBox<String> comboRegion;
    private javax.swing.JComboBox<String> comboTipoUva;
    private javax.swing.JComboBox<String> comboViñedo;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JTextField idvino;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jdescripcion;
    private com.toedter.calendar.JDateChooser jfecha;
    private javax.swing.JTextField jnombre;
    private javax.swing.JTextField jprecio;
    private javax.swing.JTextField jurl;
    // End of variables declaration//GEN-END:variables
}
