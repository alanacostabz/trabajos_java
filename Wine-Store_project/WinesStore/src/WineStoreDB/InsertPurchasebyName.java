/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WineStoreDB;

import static WineStoreDB.DeleteCostumer.RET_CANCEL;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author bryan
 */
public class InsertPurchasebyName extends javax.swing.JDialog {

    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    public final Database db;
    private final HashMap ht1;
    private final HashMap ht2;
    private final HashMap ht3;
    double totalwine;

    public InsertPurchasebyName(java.awt.Frame parent, Database db) {
        super(parent, true);
        this.db = db;

        initComponents();
        ht1 = new HashMap<String, Integer>();
        ht2 = new HashMap<String, Integer>();
        ht3 = new HashMap<String, Integer>();

        buildCombo();
        buildComboW();
        java.util.Date date = new java.util.Date();
        jfecha.setDate(date);

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();

        actionMap.put(cancelName, new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        }
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboName = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboWine = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jfecha = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        aghh = new javax.swing.JTextField();
        novi = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Venta");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Insertar compra por nombre");

        comboName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        comboName.setToolTipText("");
        comboName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                comboNameFocusLost(evt);
            }
        });
        comboName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboNameMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboNameMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comboNameMouseReleased(evt);
            }
        });
        comboName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNameActionPerformed(evt);
            }
        });
        comboName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comboNameKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Nombre del cliente:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nombre vino:");

        comboWine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selccionar" }));
        comboWine.setToolTipText("");
        comboWine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboWineActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Fecha:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Cantidad:");

        cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Total:");

        total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total.setForeground(new java.awt.Color(0, 0, 204));
        total.setText("0.00");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("ID:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("ID:");

        aghh.setEditable(false);
        aghh.setBackground(new java.awt.Color(255, 255, 255));
        aghh.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        novi.setEditable(false);
        novi.setBackground(new java.awt.Color(255, 255, 255));
        novi.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboName, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(aghh, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboWine, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(novi)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(aghh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboWine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(novi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(total))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Integer n = (Integer) ht1.get(comboName.getSelectedItem().toString());
        Integer a = (Integer) ht2.get(comboWine.getSelectedItem());
        String c = cantidad.getText();

        if (n == null || a == null || c.isEmpty()) {

            JOptionPane.showMessageDialog(rootPane, "Todos los compos tienen que llenarse.");
        } else {
            String f = "";
            String dia = "";
            String mes = "";
            String year = "";
            String s = "";

            if (jfecha.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Seleccione la fecha de compra.");
            } else {
                int input = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de añadir la venta? ", "Agregar venta", 0);
                if (input == 0) {
                    dia = Integer.toString(jfecha.getCalendar().get(Calendar.DAY_OF_MONTH));
                    year = Integer.toString(jfecha.getCalendar().get(Calendar.YEAR));
                    mes = Integer.toString(jfecha.getCalendar().get(Calendar.MONTH) + 1);
                    f = year + "-" + mes + "-" + dia;
                    StringBuilder sql
                            = new StringBuilder("INSERT INTO winestore.purchases (costumer_id, wine_store_id,Date_of_purchase,amount_of_bottles,amount_of_purchase) VALUES (\'");
                    sql.append(n);
                    sql.append("\','");
                    sql.append(a);
                    sql.append("\','");
                    sql.append(f);
                    sql.append("\','");
                    sql.append(c);
                    sql.append("\','");
                    sql.append(totalwine);
                    sql.append("\')");
                    try {
                        db.update(sql.toString());
                    } catch (SQLException ex) {
                        Logger.getLogger(InsertPurchase.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    JOptionPane.showMessageDialog(this, "El la compra ha sido añadida exitosamente.");
                    doClose(returnStatus);
                }
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void cantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadKeyReleased
        String valor = cantidad.getText();
        Integer id = (Integer) ht2.get(comboWine.getSelectedItem());

        String preciow = "";

        if (id != null) {
            // try {
            //  if (validacionDatosW(id) != 0) {
            //     System.out.println("");
            //    int aux = Integer.parseInt(id);
            //   total.setText("ID valido.");
            final String sql = String.format("select price from winestore.wine_store where wine_store_id = %s", id);

            try {
                ResultSet rs = db.query(sql);
                while (rs.next()) {
                    int id1 = rs.getInt(1);
                    preciow = rs.getString(1);
                    ht3.put(preciow, id1);

                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            double p;
            char c = evt.getKeyChar();
            if (!valor.isEmpty()) {

                p = Double.parseDouble(preciow);
                double can = Double.parseDouble(valor);
                totalwine = can * p;
                String aggh = Double.toString(totalwine);
                total.setText(aggh);
            } else {

                total.setText("0.00");
            }
            //  } else {
            // JOptionPane.showMessageDialog(this, "El vino con id="+idw+" no existe en la base de datos.");
            //      jLabel8.setText("El ID no existente.");

            // }
            //} catch (SQLException ex) {
            //    Logger.getLogger(InsertPurchase.class.getName()).log(Level.SEVERE, null, ex);
            // }
            //  }
        }
    }//GEN-LAST:event_cantidadKeyReleased

    private void cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadKeyTyped
        int limit = 5;
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && c != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se pueden ingresar números.");
        }
        if (cantidad.getText().length() == limit) {
            evt.consume();
            getToolkit().beep();
        }


    }//GEN-LAST:event_cantidadKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        doClose(returnStatus);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboNameMouseClicked
        // TODO add your handling code here:
        Integer s = (Integer) ht1.get(comboName.getSelectedItem());
        String id1 = "";
        aghh.setText("");
        final String sql1 = String.format("SELECT customer_id, apellido, nombre FROM winestore.customer where customer_id = " + s);
        try {

            ResultSet rs = db.query(sql1);

            while (rs.next()) {
                //comboRegion.addItem("NULL");
                id1 = rs.getString(1);

                aghh.setText(id1);

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_comboNameMouseClicked

    private void comboNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_comboNameKeyReleased

    private void comboNameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboNameMouseReleased
        // TODO add your handling code here:
        Integer s = (Integer) ht1.get(comboName.getSelectedItem());
        String id1 = "";
        aghh.setText("");
        final String sql1 = String.format("SELECT customer_id, apellido, nombre FROM winestore.customer where customer_id = " + s);
        try {

            ResultSet rs = db.query(sql1);

            while (rs.next()) {
                //comboRegion.addItem("NULL");
                id1 = rs.getString(1);

                aghh.setText(id1);

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_comboNameMouseReleased

    private void comboNameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboNameMousePressed
        // TODO add your handling code here:
        Integer s = (Integer) ht1.get(comboName.getSelectedItem());

        String id1 = "";
        aghh.setText("");
        final String sql1 = String.format("SELECT customer_id, apellido, nombre FROM winestore.customer where customer_id = " + s);
        try {

            ResultSet rs = db.query(sql1);

            while (rs.next()) {
                //comboRegion.addItem("NULL");
                id1 = rs.getString(1);

                aghh.setText(id1);

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_comboNameMousePressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void comboNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboNameFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_comboNameFocusLost

    private void comboNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboNameFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_comboNameFocusGained

    private void comboNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNameActionPerformed
        // TODO add your handling code here:
        Integer s = (Integer) ht1.get(comboName.getSelectedItem());
        String id1 = "";
        aghh.setText("");
        final String sql1 = String.format("SELECT customer_id, apellido, nombre FROM winestore.customer where customer_id = " + s);
        try {

            ResultSet rs = db.query(sql1);

            while (rs.next()) {
                //comboRegion.addItem("NULL");
                id1 = rs.getString(1);

                aghh.setText(id1);

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_comboNameActionPerformed

    private void comboWineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboWineActionPerformed
        // TODO add your handling code here:Integer s = (Integer) ht1.get(comboName.getSelectedItem());
        //ht1.clear();
        Integer w = (Integer) ht2.get(comboWine.getSelectedItem());
        System.out.println(w);
        String id1 = "";
        novi.setText("");
        final String sql = String.format("SELECT wine_store_id FROM winestore.wine_store where wine_store_id = " + w);
        try {

            ResultSet rs1 = db.query(sql);

            while (rs1.next()) {
                //comboRegion.addItem("NULL");
                id1 = rs1.getString(1);

                novi.setText(id1);

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_comboWineActionPerformed

    /**
     * @param args the command line arguments
     */
    private void buildCombo() {
        final String sql = "SELECT customer_id, apellido, nombre FROM winestore.customer order by apellido";

        try {
            ResultSet rs = db.query(sql);
            while (rs.next()) {
                int id = rs.getInt(1);
                String apellido = rs.getString(2);
                String name = rs.getString(3);
                String n = name + " " + apellido;
                comboName.addItem(n);
                ht1.put(n, id);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void buildComboW() {
        final String sql = "SELECT wine_store_id, wine_name FROM winestore.wine_store order by wine_name";

        try {
            ResultSet rs = db.query(sql);
            while (rs.next()) {
                int id = rs.getInt(1);
                String w = rs.getString(2);

                String n = w;
                comboWine.addItem(n);
                ht2.put(n, id);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    public int getReturnStatus() {
        return returnStatus;
    }
    private int returnStatus = RET_CANCEL;

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aghh;
    private javax.swing.JTextField cantidad;
    private javax.swing.JComboBox<String> comboName;
    private javax.swing.JComboBox<String> comboWine;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private com.toedter.calendar.JDateChooser jfecha;
    private javax.swing.JTextField novi;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
