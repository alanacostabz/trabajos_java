/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WineStoreDB;

import static WineStoreDB.DeleteWinesID.RET_OK;
import static WineStoreDB.InsertCustomer.RET_CANCEL;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author bryan
 */
public class editCustomers extends javax.swing.JDialog {

    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;
    private HashMap ht1;
    private final Database db;
    int country_code;
    String n;
    int idpa;
    String nombre;
    String apellido;
    Date fecha_nacimiento;
    String email;
    String telefono;
    String direccion;
    int costumer_id;
    int banderilla = 0;

    public editCustomers(java.awt.Frame parent, Database db) {
        super(parent, true);
        initComponents();
        this.db = db;
        String cancelName = "cancel";
        ht1 = new HashMap<String, Integer>();

        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textid = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jnombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        japellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jfecha = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jdireccion = new javax.swing.JTextField();
        jtelefono = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jemail = new javax.swing.JTextField();
        combocountry = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar cliente");

        textid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar cliente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setText("ID:");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idKeyTyped(evt);
            }
        });

        buscar.setText("Buscar");
        buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarMouseClicked(evt);
            }
        });
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout textidLayout = new javax.swing.GroupLayout(textid);
        textid.setLayout(textidLayout);
        textidLayout.setHorizontalGroup(
            textidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textidLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        textidLayout.setVerticalGroup(
            textidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textidLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(textidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("Nombre(s):");

        jnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jnombreKeyTyped(evt);
            }
        });

        jLabel3.setText("Apellido(s):");

        japellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                japellidoKeyTyped(evt);
            }
        });

        jLabel4.setText("Fecha de nacimiento:");

        jLabel5.setText("Dirección:");

        try {
            jtelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(###)###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtelefonoFocusLost(evt);
            }
        });

        jLabel6.setText("Télefono:");

        jLabel7.setText("email:");

        combocountry.setToolTipText("");

        jLabel8.setText("País:");

        jButton1.setText("Editar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(textid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jnombre)
                                        .addComponent(japellido)
                                        .addComponent(jfecha, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                        .addComponent(jdireccion)
                                        .addComponent(jtelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jemail, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                                    .addComponent(combocountry, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)))
                        .addGap(80, 80, 80)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(japellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combocountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        banderilla = 1;
        jnombre.setText("");
        japellido.setText("");
        jfecha.setDate(null);
        jdireccion.setText("");
        jtelefono.setText("");
        jemail.setText("");
        combocountry.removeAllItems();
        try {
            String idc = id.getText();

            if (idc.isEmpty() || idc.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Campo vacío, ingrese ID para editar.");

            } else if (validacionDatosID(idc) == 0) {
                JOptionPane.showMessageDialog(rootPane, "El ID= " + idc + " de clientes no se encuentra en la base de datos.");
            } else {
                String sql = String.format("select * from winestore.customer where customer_id = %s", idc);
                try {

                    ht1.clear();
                    ResultSet rs = db.query(sql);
                    //String selet = "Seleccionar";
                    //  comboName.addItem(selet);
                    while (rs.next()) {
                        costumer_id = (rs.getInt(1));
                        nombre = rs.getString(2);
                        apellido = rs.getString(3);
                        fecha_nacimiento = rs.getDate(4);
                        country_code = rs.getInt(5);
                        email = rs.getString(6);
                        telefono = rs.getString(7);
                        direccion = rs.getString(8);

                        jnombre.setText(nombre);
                        japellido.setText(apellido);
                        jfecha.setDate(fecha_nacimiento);
                        jdireccion.setText(direccion);
                        jtelefono.setText(telefono);
                        jemail.setText(email);
                        final String sql2 = "SELECT country_code,country_name FROM winestore.ref_countries  where country_code =  " + country_code;
                        try {

                            ResultSet rs2 = db.query(sql2);

                            while (rs2.next()) {

                                idpa = rs2.getInt(1);

                                n = rs2.getString(2);

                                //combocountry.addItem(name);
                                ht1.put(n, idpa);

                            }

                            final String sql1 = "SELECT country_code,country_name FROM winestore.ref_countries order by country_name";

                            try {
                                ResultSet rs1 = db.query(sql1);
                                //combocountry.addItem(auxs);
                                combocountry.removeAllItems();
                                combocountry.addItem(n);
                                while (rs1.next()) {

                                    int idp = rs1.getInt(1);

                                    String name = rs1.getString(2);
                                    if (!name.equals(n)) {
                                        combocountry.addItem(name);

                                        ht1.put(name, idp);
                                    }

                                }
                            } catch (SQLException ex) {

                                System.out.println(ex.getMessage());
                            }
                        } catch (SQLException ex) {

                            System.out.println(ex.getMessage());
                        }
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(editCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_buscarActionPerformed

    private void idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyTyped

        int limit = 5;
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && c != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se pueden ingresar números.");
        }
        if (id.getText().length() == limit) {
            evt.consume();
            getToolkit().beep();
        }

    }//GEN-LAST:event_idKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String idc = id.getText();
        if (idc.isEmpty() || idc.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Campo vacío, ingrese ID para editar.");

        } else {

            String f = "";
            String dia = "";
            String mes = "";
            String year = "";
            String s = "";

            //  java.util.Date r = jfecha.getDate();
            String idp = id.getText();
            String n = jnombre.getText();
            String a = japellido.getText();
            String d = jdireccion.getText();
            String namee = n + " " + a;
            String telefono = jtelefono.getText();
            String email = jemail.getText();
            Pattern patron = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
            Matcher mather = patron.matcher(email);
            String aggh = id.getText();

            if (aggh.isEmpty() || banderilla == 0) {
                JOptionPane.showMessageDialog(this, "Busca primero el id de cliente.");
            } else {
                if (n.isEmpty() || a.isEmpty() || telefono.contains(" ")
                        || email.isEmpty() || d.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Asegúrese que el ID de cliente sea valido y que los campos no estén en vacíos.");
                } else if (mather.find() != true) {
                    JOptionPane.showMessageDialog(this, "Dirección de correo no valida");
                } else {
                    if (jfecha.getDate() == null) {
                        JOptionPane.showMessageDialog(this, "Seleccione fecha de nacimiento valida.");
                    } else {

                        dia = Integer.toString(jfecha.getCalendar().get(Calendar.DAY_OF_MONTH));
                        year = Integer.toString(jfecha.getCalendar().get(Calendar.YEAR));
                        mes = Integer.toString(jfecha.getCalendar().get(Calendar.MONTH) + 1);
                        int edad = calcularEdad(jfecha.getCalendar());

                        String m = "0";

                      /*  if (mes.length() == 1 || dia.length() == 1) {
                            mes = m + mes;

                        }
                        f = year + "-" + mes + "-" + dia;
                        if (dia.length() == 1 || dia.startsWith("0")) {
                            dia = m + dia;
                        }*/
                      f = year + "-" + mes + "-" + dia;

                        if (edad < 21) {

                            JOptionPane.showMessageDialog(rootPane, "Solo pueden registrarse mayores de 21 años.");
                        } else {
                            int input = JOptionPane.showConfirmDialog(rootPane, "¿Desea guardar los cambios al cliente " + namee.toUpperCase() + " con ID = " + idc + "?", "Editar cliente", 0);
                            if (input == 0) {
                                int p = (int) ht1.get(combocountry.getSelectedItem());
                                StringBuilder sql
                                        = new StringBuilder("UPDATE winestore.customer SET nombre ='" + n.toUpperCase() + "'," + "apellido='" + a.toUpperCase() + "'," + "fecha_nacimiento='" + f + "'," + "country_code=" + p + "," + "email='" + email + "',"
                                                + "telefono='" + telefono + "'," + "direccion='" + d + "' where customer_id= " + idp);
                                System.out.println(sql);
                                try {
                                    db.update(sql.toString());
                                } catch (SQLException ex) {
                                    JOptionPane.showMessageDialog(this, "Error al editar cliente.");
                                    System.out.println(ex.getMessage());
                                }
                                JOptionPane.showMessageDialog(rootPane, "Se han guardado correctamente los cambios.");
                                setVisible(false);
                            }
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    private int returnStatus = RET_CANCEL;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        doClose(returnStatus);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyReleased
        // TODO add your handling code here:
        String idc = id.getText().toString();
        jLabel9.setText("");

        if (!idc.equals("")) {
            try {
                if (validacionDatosID(idc) != 0) {
                    System.out.println("");
                    jLabel9.setText("ID valido.");

                } else {
                    jLabel9.setText("ID no existente.");
                    jnombre.setText("");
                    japellido.setText("");
                    jfecha.setDate(null);
                    jdireccion.setText("");
                    jtelefono.setText("");
                    jemail.setText("");
                    combocountry.removeAllItems();
                }
            } catch (SQLException ex) {
                Logger.getLogger(editCustomers.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_idKeyReleased

    private void buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_buscarMouseClicked

    private void jtelefonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtelefonoFocusLost
        // TODO add your handling code here:
        String s = jtelefono.getText();
        if (s.contains(" ")) {
            JOptionPane.showMessageDialog(rootPane, "Número de teléfono incompleto, favor de completar el campo correctamente.");

        }
    }//GEN-LAST:event_jtelefonoFocusLost

    private void jnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jnombreKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        if (!Character.isLetter(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_SPACE) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se pueden ingresar letras.");
        }

        if (jnombre.getText().length() == 30) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jnombreKeyTyped

    private void japellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_japellidoKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        if (!Character.isLetter(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_SPACE) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Solo se pueden ingresar letras.");
        }

        if (japellido.getText().length() == 30) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_japellidoKeyTyped

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    public int validacionDatosID(String vd) throws SQLException {
        String sql1 = "select customer_id  from winestore.customer";
        int x = 0;
        try {
            ResultSet rs = db.query(sql1);
            while (rs.next()) {

                String name = rs.getString(1);
                if (name.equalsIgnoreCase(vd)) {
                    x++;
                }

            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return x;
    }

    private int calcularEdad(Calendar fechaNac) {
        Calendar today = Calendar.getInstance();

        int diff_year = today.get(Calendar.YEAR) - fechaNac.get(Calendar.YEAR);
        int diff_month = today.get(Calendar.MONTH) - fechaNac.get(Calendar.MONTH);
        int diff_day = today.get(Calendar.DAY_OF_MONTH) - fechaNac.get(Calendar.DAY_OF_MONTH);

        //Si está en ese año pero todavía no los ha cumplido
        if (diff_month < 0 || (diff_month == 0 && diff_day < 0)) {
            diff_year = diff_year - 1; //no aparecían los dos guiones del postincremento :|
        }
        return diff_year;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JComboBox<String> combocountry;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField japellido;
    private javax.swing.JTextField jdireccion;
    private javax.swing.JTextField jemail;
    private com.toedter.calendar.JDateChooser jfecha;
    private javax.swing.JTextField jnombre;
    private javax.swing.JFormattedTextField jtelefono;
    private javax.swing.JPanel textid;
    // End of variables declaration//GEN-END:variables
}
